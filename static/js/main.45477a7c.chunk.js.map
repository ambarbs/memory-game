{"version":3,"sources":["components/app/App.styles.js","components/common/Common.Styles.js","components/flipCard/FlipCard.Styles.js","store/constants.js","store/thunks.js","components/flipCard/FlipCard.js","components/cardList/CardList.Styles.js","components/cardList/CardList.js","components/toast/Toast.Styles.js","components/toast/Toast.js","components/app/App.js","serviceWorker.js","components/cardList/Images.js","store/utils.js","store/AppStore.js","index.js"],"names":["AppWrapper","styled","div","Grid","Button","FLipCardWrapper","FLipCardContainer","props","flip","FlipCardFront","FlipCardBack","actionType","gameDimension","setOpenedCards","openedCards","dispatch","a","type","payload","closeImage","imageId","FlipCard","frontSide","backSide","closeImageWithIndex","imageIndex","useState","setIsFrontSide","useSelector","state","gameReducer","useDispatch","flipCardWithTimeout","time","setTimeout","useEffect","onClick","length","isGameOver","push","find","card","pop","defaultProps","ImageCardWrapper","img","GradientAnimation","keyframes","CardBackSide","CardList","gameMatrix","gameKey","cards","map","item","index","key","image","FadeIn","FadeOut","ToastWrapper","Toast","children","App","gameOver","Boolean","window","location","hostname","match","images","src","shuffleArray","array","i","j","Math","floor","random","getInitialLayout","row","col","imageArray","imageCounter","INITIAL_STATE","middlewares","thunk","store","createStore","combineReducers","action","UPDATE_OPENED_CARDS","CLOSE_IMAGE_WITH_INDEX","RESET_STATE","GAME_OVER","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.45477a7c.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const AppWrapper = styled.div`\n  background-color: #31354b;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n","import styled from 'styled-components/macro';\n\nexport const Grid = styled.div`\n  display: grid;\n  grid-gap: 3rem;\n  grid-template-columns: repeat(5, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n`;\n\nexport const Button = styled.div`\n  border-radius: 4px;\n  background-color: #d35400;\n  border: none;\n  padding: 20px;\n  width: 200px;\n  transition: all 0.5s;\n  margin-top: 100px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  font-size: large;\n  font-weight: bold;\n  color: white;\n`;\n\nexport const FlexRow = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 600px;\n`;\n","import styled from 'styled-components/macro';\n\nexport const FLipCardWrapper = styled.div`\n  cursor: pointer;\n  height: 150px;\n  //perspective: 600;\n  position: relative;\n  width: 150px;\n`;\n\nexport const FLipCardContainer = styled.div`\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  transform-style: preserve-3d;\n  transition: all 1s ease-in-out;\n  transform: ${(props) => props.flip && 'rotateY(180deg)'};\n`;\n\nexport const FlipCardFront = styled.div`\n  backface-visibility: hidden;\n  //border: 2px solid dimgrey;\n  border-radius: 6px;\n  height: 100%;\n  position: absolute;\n  overflow: hidden;\n  width: 100%;\n`;\n\nexport const FlipCardBack = styled(FlipCardFront)`\n  background: #eaeaed;\n  color: #0087cc;\n  line-height: 150px;\n  text-align: center;\n  transform: rotateY(180deg);\n  //border: 2px solid dimgrey;\n  border-radius: 6px;\n`;\n","export const actionType = {\n  UPDATE_OPENED_CARDS: 'UPDATE_OPENED_CARDS',\n  CLOSE_IMAGE_WITH_INDEX: 'CLOSE_IMAGE_WITH_INDEX',\n  RESET_STATE: 'RESET_STATE',\n  GAME_OVER: 'GAME_OVER',\n  FLIP_ALL: 'FLIP_ALL',\n};\n\nexport const gameDimension = { row: 2, col: 5 };\n","import { actionType } from './constants';\n\nexport const setOpenedCards = (openedCards) => {\n  return async (dispatch) => {\n    return dispatch({ type: actionType.UPDATE_OPENED_CARDS, payload: [...openedCards] });\n  };\n};\n\nexport const closeImage = (imageId) => {\n  return async (dispatch) => {\n    return dispatch({ type: actionType.CLOSE_IMAGE_WITH_INDEX, payload: imageId });\n  };\n};\n\nexport const resetGame = () => {\n  return async (dispatch) => {\n    return dispatch({ type: actionType.RESET_STATE, payload: null });\n  };\n};\n\nexport const setGameOver = (isGameOver) => {\n  return async (dispatch) => {\n    return dispatch({ type: actionType.GAME_OVER, payload: isGameOver });\n  };\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { FlipCardBack, FLipCardContainer, FlipCardFront, FLipCardWrapper } from './FlipCard.Styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { closeImage, setGameOver, setOpenedCards } from '../../store/thunks';\nimport { gameDimension } from '../../store/constants';\n\nconst FlipCard = ({ frontSide, backSide, imageId, closeImageWithIndex, imageIndex }) => {\n  const [flip, setIsFrontSide] = useState(false);\n  const openedCards = useSelector((state) => state.gameReducer.openedCards);\n  const dispatch = useDispatch();\n\n  const flipCardWithTimeout = (time, flip) => {\n    setTimeout(() => {\n      setIsFrontSide(flip);\n    }, time);\n  };\n\n  useEffect(() => {\n    // Open card after 500ms\n    flipCardWithTimeout(500, true);\n    // Close card after 5sec\n    flipCardWithTimeout(1500, false);\n  }, []);\n\n  useEffect(() => {\n    if (closeImageWithIndex === imageIndex) {\n      flipCardWithTimeout(2000, !flip);\n      dispatch(closeImage(null));\n    }\n  }, [closeImageWithIndex, imageIndex, dispatch, flip]);\n\n  const onClick = () => {\n    setIsFrontSide(!flip);\n\n    if (openedCards.length >= gameDimension.row * gameDimension.col - 1) {\n      dispatch(setGameOver(true));\n      return;\n    }\n    if (openedCards.length % 2 === 0) {\n      openedCards.push({ imageId, imageIndex });\n      dispatch(setOpenedCards(openedCards));\n      return;\n    }\n    // If 2nd card opened & does not match the previous card then close the card\n    if (openedCards.length % 2 === 1 && !openedCards.find((card) => card.imageId === imageId)) {\n      // Close card after 5sec\n      flipCardWithTimeout(2000, false);\n      // Remove previous image\n      dispatch(closeImage(openedCards.pop().imageIndex));\n    } else {\n      openedCards.push({ imageId, imageIndex });\n    }\n    dispatch(setOpenedCards(openedCards));\n  };\n\n  return (\n    <FLipCardWrapper>\n      <FLipCardContainer onClick={onClick} flip={flip}>\n        <FlipCardFront>{backSide}</FlipCardFront>\n        <FlipCardBack>{frontSide}</FlipCardBack>\n      </FLipCardContainer>\n      {/*{flip ? frontSide : backSide}*/}\n    </FLipCardWrapper>\n  );\n};\n\nexport default FlipCard;\n\nFlipCard.propTypes = {\n  frontSide: PropTypes.element,\n  backSide: PropTypes.element,\n  imageId: PropTypes.number,\n  imageIndex: PropTypes.number,\n  closeImageWithIndex: PropTypes.number,\n};\n\nFlipCard.defaultProps = {\n  frontSide: <div>Front</div>,\n  backSide: <div>Back</div>,\n};\n","import styled, { keyframes } from 'styled-components/macro';\n\nexport const ImageCardWrapper = styled.img`\n  width: 150px;\n  height: 150px;\n`;\n\nconst GradientAnimation = keyframes`\n  0% {\nbackground-position: 0% 50%;\n}\n50% {\nbackground-position: 100% 50%;\n}\n100% {\nbackground-position: 0% 50%;\n}\n`;\nexport const CardBackSide = styled.div`\n  width: 150px;\n  height: 150px;\n  border-radius: 6px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: linear-gradient(-45deg, #ee2943, #e7da65, #23a6d5, #23d5ab);\n  background-size: 400% 400%;\n  animation: ${GradientAnimation} 15s ease infinite;\n`;\n","import React from 'react';\nimport { Grid } from '../common/Common.Styles';\nimport FlipCard from '../flipCard/FlipCard';\nimport { CardBackSide } from './CardList.Styles';\nimport { useSelector } from 'react-redux';\n\nconst CardList = () => {\n  const gameMatrix = useSelector((state) => state.gameReducer.gameMatrix);\n  const gameKey = useSelector((state) => state.gameReducer.gameKey);\n  const closeImageWithIndex = useSelector((state) => state.gameReducer.closeImageWithIndex);\n\n  let cards = gameMatrix.map((item, index) => (\n    <FlipCard\n      key={`${gameKey}_${index}`}\n      imageId={item.imageId}\n      closeImageWithIndex={closeImageWithIndex}\n      imageIndex={item.index}\n      backSide={<CardBackSide />}\n      frontSide={item.image}\n    />\n  ));\n\n  return <Grid key={gameKey}>{cards}</Grid>;\n};\n\nexport default CardList;\n","import styled, { keyframes } from 'styled-components';\n\nconst FadeIn = keyframes`\n  from { opacity: 0; }\n  to   { opacity: 1; }\n`;\n\nconst FadeOut = keyframes`\n  from { opacity: 1; }\n  to   { opacity: 0; }\n`;\n\nexport const ToastWrapper = styled.div`\n  width: 200px;\n  height: auto;\n  position: absolute;\n  left: 50%;\n  margin-left: -100px;\n  bottom: 10px;\n  background-color: #35bc7a;\n  color: #f0f0f0;\n  font-size: 20px;\n  padding: 10px;\n  text-align: center;\n  border-radius: 7px;\n  -webkit-box-shadow: 0px 0px 24px -1px rgba(56, 56, 56, 1);\n  -moz-box-shadow: 0px 0px 24px -1px rgba(56, 56, 56, 1);\n  box-shadow: 0px 0px 24px -1px rgba(56, 56, 56, 1);\n  animation: ${FadeIn} forwards 1000ms;\n  animation: ${FadeOut} forwards 30000ms;\n`;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { ToastWrapper } from './Toast.Styles';\n\nconst Toast = (props) => <ToastWrapper>{props.children}</ToastWrapper>;\n\nexport default Toast;\n\nToast.propTypes = {\n  children: PropTypes.any,\n};\n","import React from 'react';\nimport { AppWrapper } from './App.styles';\nimport CardList from '../cardList/CardList';\nimport Toast from '../toast/Toast';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button } from '../common/Common.Styles';\nimport { resetGame, setOpenedCards } from '../../store/thunks';\n\nconst App = () => {\n  const gameOver = useSelector((state) => state.gameReducer.gameOver);\n  const dispatch = useDispatch();\n  return (\n    <AppWrapper>\n      <CardList />\n      {gameOver && (\n        <>\n          <Toast>You won!</Toast>\n          <Button\n            onClick={() => {\n              dispatch(resetGame());\n              dispatch(setOpenedCards([]));\n            }}\n          >\n            Restart\n          </Button>\n        </>\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { ImageCardWrapper } from './CardList.Styles';\n\nexport const images = [\n  <ImageCardWrapper key=\"sports\" src=\"http://lorempixel.com/200/200/sports/\" />,\n  <ImageCardWrapper key=\"abstract\" src=\"http://lorempixel.com/200/200/abstract/\" />,\n  <ImageCardWrapper key=\"food\" src=\"http://lorempixel.com/200/200/food/\" />,\n  <ImageCardWrapper key=\"cats\" src=\"http://lorempixel.com/200/200/cats/\" />,\n  <ImageCardWrapper key=\"fashion\" src=\"http://lorempixel.com/200/200/fashion/\" />,\n  <ImageCardWrapper key=\"nature\" src=\"http://lorempixel.com/200/200/nature/\" />,\n  <ImageCardWrapper key=\"nightlife\" src=\"http://lorempixel.com/200/200/nightlife/\" />,\n  <ImageCardWrapper key=\"people\" src=\"http://lorempixel.com/200/200/people/\" />,\n  <ImageCardWrapper key=\"random\" src=\"http://lorempixel.com/200/200/transport/\" />,\n  <ImageCardWrapper key=\"city\" src=\"http://lorempixel.com/200/200/city/\" />,\n];\n","import { images } from '../components/cardList/Images';\nimport { gameDimension } from './constants';\n\nconst shuffleArray = (array = []) => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n};\n\nexport const getInitialLayout = (row = gameDimension.row, col = gameDimension.col) => {\n  const imageArray = [];\n  for (let i = 0, imageCounter = 0; i < row * col; i += 2, imageCounter++) {\n    // push image pair\n    imageArray.push({ imageId: imageCounter, image: images[imageCounter], index: i });\n    imageArray.push({ imageId: imageCounter, image: images[imageCounter], index: i + 1 });\n  }\n  shuffleArray(imageArray);\n  return imageArray;\n};\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\n// import { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { actionType } from './constants';\nimport { getInitialLayout } from './utils';\n\nconst INITIAL_STATE = {\n  gameMatrix: getInitialLayout(),\n  openedCards: [],\n  closeImageWithIndex: null,\n  gameOver: false,\n  gameKey: 1,\n};\nconst gameReducer = (state = INITIAL_STATE, action) => {\n  const { UPDATE_OPENED_CARDS, CLOSE_IMAGE_WITH_INDEX, RESET_STATE, GAME_OVER } = actionType;\n\n  switch (action.type) {\n    default:\n      break;\n    case UPDATE_OPENED_CARDS:\n      state = {\n        ...state,\n        openedCards: action.payload,\n      };\n      break;\n    case CLOSE_IMAGE_WITH_INDEX:\n      state = {\n        ...state,\n        closeImageWithIndex: action.payload,\n      };\n      break;\n    case GAME_OVER:\n      state = {\n        ...state,\n        gameOver: action.payload,\n      };\n      break;\n    case RESET_STATE:\n      debugger;\n      state = {\n        ...INITIAL_STATE,\n        gameKey: ++INITIAL_STATE.gameKey,\n        gameMatrix: getInitialLayout(),\n      };\n      break;\n  }\n  return state;\n};\n\nconst middlewares = [\n  // createLogger(),\n  thunk,\n];\n\nexport const store = createStore(\n  combineReducers({ gameReducer }),\n  {},\n  composeWithDevTools(\n    applyMiddleware(...middlewares)\n    // other store enhancers if any\n  )\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\nimport { store } from './store/AppStore';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}