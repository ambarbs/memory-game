{"version":3,"sources":["components/app/App.styles.js","components/common/Common.Styles.js","components/flipCard/FlipCard.Styles.js","store/constants.js","store/thunks.js","store/selectors.js","components/flipCard/FlipCard.js","components/cardList/CardList.Styles.js","components/cardList/CardList.js","components/toast/Toast.Styles.js","components/toast/Toast.js","components/gameOver/GameOver.js","components/sideBar/SideBar.styles.js","components/sideBarContent/SideBarContent.styles.js","components/cardList/CardIcons.js","store/utils.js","components/selectButtonGroup/SelectButtonGroup.styles.js","components/selectButtonGroup/SelectButtonGroup.js","components/sideBarContent/SideBarContent.js","components/sideBar/SideBar.js","components/app/App.js","serviceWorker.js","store/AppStore.js","index.js"],"names":["AppWrapper","styled","div","Grid","props","col","row","Button","direction","width","FLipCardWrapper","FLipCardContainer","flip","FlipCardBack","FlipCardFront","actionType","setOpenedCards","openedCards","dispatch","a","type","payload","closeImage","imageId","resetGame","gameDifficulty","iconStyle","setGameMatrix","gameMatrix","getGameOver","state","gameReducer","gameOver","getGameMatrix","getGameKey","gameKey","getOpenCards","getCLoseImageWithIndex","closeImageWithIndex","getGameDifficulty","getIconStyle","getMatrixDimension","matrixDimension","FlipCard","FrontSide","backSide","imageIndex","useState","setIsFrontSide","useSelector","useDispatch","flipCardWithTimeout","time","setTimeout","useEffect","onClick","length","isGameOver","push","find","card","pop","defaultProps","frontSide","img","GradientAnimation","keyframes","CardBackSide","CardList","cards","map","item","index","key","image","FadeIn","FadeOut","ToastWrapper","Toast","children","GameOver","SideBarWrapper","open","SideBarInnerWrapper","SliderButtonWrapper","SideBarContentWrapper","SidebarImageWrapper","iconMap","Di","Fa","Vsc","Wi","Gi","Si","getCardIcons","getShuffledArray","array","shuffledArray","i","j","Math","floor","random","getInitialLayout","imageArray","icons","Object","values","imageCounter","IconComponent","SelectButtonWrapper","active","height","SelectButtonGroupWrapper","SelectButtonGroupWrapperGrid","cols","rows","SideBarContentTitle","h3","wrapperMap","grid","flex","SelectButtonGroup","contents","onSelect","selectedIndex","title","wrapperType","WrapperComponent","label","SideBarContent","imageButtons","SiAmazon","Fa500Px","VscAccount","WiDayShowers","GiSkullSabertooth","DiAndroid","ImageComponent","parseInt","setMatrixDimension","setGameDifficulty","setIconStyle","cardArray","imageIds","Array","from","Set","forEach","filter","replaceImagesInLayout","SideBar","setOpen","App","Boolean","window","location","hostname","match","INITIAL_STATE","middlewares","thunk","store","createStore","combineReducers","action","SET_GAME_MATRIX","UPDATE_OPENED_CARDS","CLOSE_IMAGE_WITH_INDEX","RESET_STATE","GAME_OVER","SET_GAME_DIFFICULTY","SET_ICON_STYLE","SET_MATRIX_DIMENSION","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"ocAEO,IAAMA,EAAaC,IAAOC,IAAV,KCAVC,EAAOF,IAAOC,IAAV,yEAAGD,CAAH,iMAGU,SAACG,GAAD,uBAAqBA,EAAMC,IAA3B,aACH,SAACD,GAAD,uBAAqBA,EAAME,IAA3B,aAOXC,EAASN,IAAOC,IAAV,2EAAGD,CAAH,8O,GAiBCA,IAAOC,IAAV,yEAAGD,CAAH,0FAEG,SAACG,GAAD,OAAWA,EAAMI,WAAa,SAGvC,SAACJ,GAAD,OAAWA,EAAMK,S,OCjCfC,EAAkBT,IAAOC,IAAV,sFAAGD,CAAH,+HAWfU,EAAoBV,IAAOC,IAAV,wFAAGD,CAAH,uHAMf,SAACG,GAAD,OAAWA,EAAMQ,MAAQ,qBAG3BC,EAAeZ,IAAOC,IAAV,mFAAGD,CAAH,4GASZa,EAAgBb,YAAOY,GAAV,oFAAGZ,CAAH,2K,sCC/Bbc,EACM,kBADNA,EAEU,sBAFVA,EAGa,yBAHbA,EAIE,cAJFA,EAKA,YALAA,EAMU,sBANVA,EAOK,iBAPLA,EAQW,uBCNXC,EAAiB,SAACC,GAC7B,8CAAO,WAAOC,GAAP,SAAAC,EAAA,+EACED,EAAS,CAAEE,KAAML,EAAgCM,QAAQ,YAAKJ,MADhE,2CAAP,uDAKWK,EAAa,SAACC,GACzB,8CAAO,WAAOL,GAAP,SAAAC,EAAA,+EACED,EAAS,CAAEE,KAAML,EAAmCM,QAASE,KAD/D,2CAAP,uDAKWC,EAAY,SAAC,GAA6C,IAA3ClB,EAA0C,EAA1CA,IAAKD,EAAqC,EAArCA,IAAKoB,EAAgC,EAAhCA,eAAgBC,EAAgB,EAAhBA,UACpD,8CAAO,WAAOR,GAAP,SAAAC,EAAA,+EACED,EAAS,CACdE,KAAML,EACNM,QAAS,CAAEf,MAAKD,MAAKoB,iBAAgBC,gBAHlC,2CAAP,uDAgCWC,EAAgB,SAACC,GAC5B,8CAAO,WAAOV,GAAP,SAAAC,EAAA,+EACED,EAAS,CAAEE,KAAML,EAA4BM,QAASO,KADxD,2CAAP,uDChDWC,EAAc,SAACC,GAAD,OAAWA,EAAMC,YAAYC,UAE3CC,EAAgB,SAACH,GAAD,OAAWA,EAAMC,YAAYH,YAE7CM,EAAa,SAACJ,GAAD,OAAWA,EAAMC,YAAYI,SAE1CC,EAAe,SAACN,GAAD,OAAWA,EAAMC,YAAYd,aAE5CoB,EAAyB,SAACP,GAAD,OAAWA,EAAMC,YAAYO,qBAEtDC,EAAoB,SAACT,GAAD,OAAWA,EAAMC,YAAYN,gBAEjDe,EAAe,SAACV,GAAD,OAAWA,EAAMC,YAAYL,WAE5Ce,EAAqB,SAACX,GAAD,OAAWA,EAAMC,YAAYW,iBCPzDC,EAAW,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,UAAWC,EAAoC,EAApCA,SAAUtB,EAA0B,EAA1BA,QAASuB,EAAiB,EAAjBA,WAAiB,EAClCC,oBAAS,GADyB,mBAC1DnC,EAD0D,KACpDoC,EADoD,KAE3D/B,EAAcgC,YAAYb,GAC1BE,EAAsBW,YAAYZ,GAClCK,EAAkBO,YAAYR,GAC9BvB,EAAWgC,cAEXC,EAAsB,SAACC,EAAMxC,GACjCyC,YAAW,WACTL,EAAepC,KACdwC,IAGLE,qBAAU,WAERH,EAAoB,KAAK,GAEzBA,EAAoB,MAAM,KACzB,IAEHG,qBAAU,WACJhB,IAAwBQ,IAC1BK,EAAoB,KAAOvC,GAC3BM,EAASI,EAAW,UAErB,CAACgB,EAAqBQ,EAAY5B,EAAUN,IAyB/C,OACE,kBAACF,EAAD,KACE,kBAACC,EAAD,CAAmB4C,QAzBP,WAGd,GAFAP,GAAgBpC,GAEZK,EAAYuC,QAAUd,EAAgBpC,IAAMoC,EAAgBrC,IAAM,EACpEa,GFfsBuC,GEeD,EFdzB,uCAAO,WAAOvC,GAAP,SAAAC,EAAA,+EACED,EAAS,CAAEE,KAAML,EAAsBM,QAASoC,KADlD,2CAAP,4DEaE,CFduB,IAACA,EEkBxB,GAAIxC,EAAYuC,OAAS,IAAM,EAG7B,OAFAvC,EAAYyC,KAAK,CAAEnC,UAASuB,oBAC5B5B,EAASF,EAAeC,IAItBA,EAAYuC,OAAS,IAAM,GAAMvC,EAAY0C,MAAK,SAACC,GAAD,OAAUA,EAAKrC,UAAYA,KAM/EN,EAAYyC,KAAK,CAAEnC,UAASuB,gBAJ5BK,EAAoB,KAAM,GAE1BjC,EAASI,EAAWL,EAAY4C,MAAMf,cAIxC5B,EAASF,EAAeC,MAIeL,KAAMA,GACzC,kBAACE,EAAD,KACE,kBAAC8B,EAAD,OAEF,kBAAC/B,EAAD,KAAegC,MAMRF,I,mMASfA,EAASmB,aAAe,CACtBC,UAAW,sCACXlB,SAAU,sCC9EoB5C,IAAO+D,IAAV,sFAAG/D,CAAH,6BAAtB,IAKDgE,EAAoBC,YAAH,KAWVC,EAAelE,IAAOC,IAAV,kFAAGD,CAAH,iOASVgE,GCGAG,EAvBE,WACf,IAAMxC,EAAaqB,YAAYhB,GACzBE,EAAUc,YAAYf,GACtBQ,EAAkBO,YAAYR,GAChC4B,EAAQzC,EACRA,EAAW0C,KAAI,SAACC,EAAMC,GAAP,OACb,kBAAC,EAAD,CACEC,IAAG,UAAKtC,EAAL,YAAgBqC,GACnBjD,QAASgD,EAAKhD,QACduB,WAAYyB,EAAKC,MACjB3B,SAAU,kBAACsB,EAAD,MACVvB,UAAW2B,EAAKG,WAGpB,KAEJ,OACE,kBAACvE,EAAD,CAAMsE,IAAKtC,EAAS7B,IAAKoC,EAAgBpC,IAAKD,IAAKqC,EAAgBrC,KAChEgE,I,gyBCvBP,IAAMM,EAAST,YAAH,KAKNU,EAAUV,YAAH,KAKAW,GAAe5E,IAAOC,IAAV,IAgBVyE,EACAC,GCvBAE,GAFD,SAAC1E,GAAD,OAAW,kBAACyE,GAAD,KAAezE,EAAM2E,WC2B/BC,GAxBE,WACf,IAAMhD,EAAWiB,YAAYpB,GACvBa,EAAkBO,YAAYR,GAC9BvB,EAAWgC,cACjB,OACE,oCACGlB,GACC,oCACE,kBAAC,GAAD,iBACA,kBAACzB,EAAD,CACEgD,QAAS,WACPrC,EAASM,KACTN,EAASF,EAAe,KACxBE,EAASM,EAAU,CAAElB,IAAKoC,EAAgBpC,IAAKD,IAAKqC,EAAgBrC,SAJxE,c,SCdG4E,GAAiBhF,IAAOC,IAAV,oFAAGD,CAAH,4JAGhB,SAACG,GAAD,OAAYA,EAAM8E,KAAO,MAAQ,QAS/BC,GAAsBlF,IAAOC,IAAV,yFAAGD,CAAH,kKAGnB,SAACG,GAAD,OAAYA,EAAM8E,KAAO,EAAI,KAQ7BE,GAAsBnF,IAAOC,IAAV,yFAAGD,CAAH,iWAUvB,SAACG,GAAD,OAAYA,EAAM8E,KAAO,KAAO,Q,sDCjC5BG,GAAwBpF,IAAOC,IAAV,kGAAGD,CAAH,oJAkBrBqF,IAP6BrF,IAAOC,IAAV,uGAAGD,CAAH,+EAOJA,IAAOC,IAAV,gGAAGD,CAAH,sGCZ1BsF,GAAU,CAACC,GAAIC,GAAIC,GAAKC,GAAIC,GAAIC,IACzBC,GAAe,WAAoB,IAAnBpE,EAAkB,uDAAN,EACvC,GAAIA,GAAa,EAGf,OAAO6D,GAAQ7D,ICNNqE,GAAmB,WAE9B,IAF+C,IAAhBC,EAAe,uDAAP,GACjCC,EAAa,YAAOD,GACjBE,EAAIF,EAAMxC,OAAS,EAAG0C,EAAI,EAAGA,IAAK,CACzC,IAAMC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IADD,EAEF,CAACD,EAAcE,GAAIF,EAAcC,IAAvED,EAAcC,GAF0B,KAEtBD,EAAcE,GAFQ,KAI3C,OAAOF,GAUIM,GAAmB,WAG9B,IAHoE,IAArCjG,EAAoC,uDAA9B,EAAGD,EAA2B,uDAArB,EAAGqB,EAAkB,uDAAN,EACvD8E,EAAa,GACbC,EAAQC,OAAOC,OAAOb,GAAapE,IAChCwE,EAAI,EAAGU,EAAe,EAAGV,EAAI5F,EAAMD,EAAK6F,GAAK,EAAGU,IAAgB,CACvE,IAAMC,EAAgBJ,EAAMG,GAE5BJ,EAAW9C,KAAK,CAAEnC,QAASqF,EAAclC,MAAOmC,EAAerC,MAAO0B,IACtEM,EAAW9C,KAAK,CAAEnC,QAASqF,EAAclC,MAAOmC,EAAerC,MAAO0B,EAAI,IAE5E,OAAOH,GAAiBS,I,k9BC9BnB,IAAMM,GAAsB7G,IAAOC,IAAV,MAEhB,SAACE,GAAD,OAAYA,EAAM2G,OAAS,UAAY,UAC5C,SAAC3G,GAAD,OAAYA,EAAM2G,OAAS,OAAS,aAEnC,SAAC3G,GAAD,OAAYA,EAAM2G,OAAS,iBAAmB,uBAC9C,SAAC3G,GAAD,OAAWA,EAAM4G,QAAU,UAC5B,SAAC5G,GAAD,OAAWA,EAAMK,OAAS,UAUnB,SAACL,GAAD,OAAYA,EAAM2G,OAAS,UAAY,UAM5CE,GAA2BhH,IAAOC,IAAV,MAQxBgH,GAA+BjH,IAAOC,IAAV,MAGd,SAACE,GAAD,uBAAqBA,EAAM+G,KAA3B,aACH,SAAC/G,GAAD,uBAAqBA,EAAMgH,KAA3B,aAGXC,GAAsBpH,IAAOqH,GAAV,MChC1BC,GAAa,CACjBC,KAAMN,GACNO,KAAMR,IAkCOS,GAhCW,SAAC,GAUpB,IATLC,EASI,EATJA,SACAC,EAQI,EARJA,SACAC,EAOI,EAPJA,cACAC,EAMI,EANJA,MACAC,EAKI,EALJA,YACAX,EAII,EAJJA,KACAD,EAGI,EAHJA,KACAH,EAEI,EAFJA,OACAvG,EACI,EADJA,MAEMuH,EAAmBT,GAAWQ,GACpC,OACE,oCACE,kBAACV,GAAD,KAAsBS,GACtB,kBAACE,EAAD,CAAkBZ,KAAMA,EAAMD,KAAMA,GACjCQ,EAASrD,KAAI,SAAC2D,EAAOzD,GAAR,OACZ,kBAACsC,GAAD,CACErC,IAAKwD,EACL1E,QAAS,kBAAMqE,EAASpD,IACxBuC,OAAQc,IAAkBrD,EAC1BwC,OAAQA,EACRvG,MAAOA,GAENwH,SChBPxF,GAAqB,SAAChB,GAC1B,OAAQA,GACN,KAAK,EACH,MAAO,CAAEnB,IAAK,EAAGD,IAAK,GACxB,QACA,KAAK,EACH,MAAO,CAAEC,IAAK,EAAGD,IAAK,GACxB,KAAK,EACH,MAAO,CAAEC,IAAK,EAAGD,IAAK,KAiEb6H,GA7DQ,WACrB,IAAMhH,EAAWgC,cACXzB,EAAiBwB,YAAYV,GAC7Bb,EAAYuB,YAAYT,GACxBZ,EAAaqB,YAAYhB,GAqBzBkG,EAAe,CACnBC,YACAC,WACAC,cACAC,gBACAC,qBACAC,cACAnE,KAAI,SAACoE,EAAgBlE,GAAjB,OACJ,kBAACc,GAAD,CAAqBb,IAAKD,GACxB,kBAACkE,EAAD,UAGJ,OACE,kBAACrD,GAAD,KACE,kBAAC,GAAD,CACEyC,MAAM,aACNC,YAAY,OACZJ,SAAU,CAAC,OAAQ,SAAU,QAC7BC,SAtCW,SAACnG,GAChB,IAAMiB,EAAkBD,GAAmBkG,SAASlH,EAAgB,KACpEP,EdE8B,SAACwB,GACjC,8CAAO,WAAOxB,GAAP,SAAAC,EAAA,+EACED,EAAS,CAAEE,KAAML,EAAiCM,QAASqB,KAD7D,2CAAP,sDcHWkG,CAAmBlG,IAC5BxB,EdX6B,SAACO,GAChC,8CAAO,WAAOP,GAAP,SAAAC,EAAA,+EACED,EAAS,CAAEE,KAAML,EAAgCM,QAASI,KAD5D,2CAAP,sDcUWoH,CAAkBpH,IAC3BP,EAASS,EAAc4E,GAAiB7D,EAAgBpC,IAAKoC,EAAgBrC,OAC7Ea,EACEM,EAAU,CAAElB,IAAKoC,EAAgBpC,IAAKD,IAAKqC,EAAgBrC,IAAKoB,iBAAgBC,gBAiC9EmG,cAAepG,IAEjB,kBAAC,GAAD,CACEqG,MAAM,QACNC,YAAY,OACZX,KAAM,EACND,KAAM,EACNH,OAAO,OACPvG,MAAM,OACNkH,SAAUQ,EACVP,SAvCgB,SAAClG,GACrB,IAAMgB,EAAkBD,GAAmBkG,SAASlH,EAAgB,KACpEP,EddwB,SAACQ,GAC3B,8CAAO,WAAOR,GAAP,SAAAC,EAAA,+EACED,EAAS,CAAEE,KAAML,EAA2BM,QAASK,KADvD,2CAAP,sDcaWoH,CAAapH,IACtBR,EACES,EHR+B,SAACoH,GAAgD,IAAnBrH,EAAkB,uDAAN,EAGvEsH,EAAWC,MAAMC,KAAK,IAAIC,IAAIJ,EAAUzE,KAAI,SAACV,GAAD,OAAUA,EAAKrC,aAC3DkF,EAAQC,OAAOC,OAAOb,GAAapE,IAWzC,OARAsH,EAASI,SAAQ,SAAC7H,EAASqF,GACzB,IAAMC,EAAgBJ,EAAMG,GACHmC,EAAUM,QAAO,SAACzF,GAAD,OAAUA,EAAKrC,UAAYA,KAGpD6H,SAAQ,SAACxF,GAAD,OAAWA,EAAKc,MAAQmC,QAG5C,YAAIkC,GGNLO,CAAsB1H,EAAYc,EAAgBpC,IAAKoC,EAAgBrC,IAAKqB,MAmC5EmG,cAAenG,MClFV6H,GAAU,WAAO,IAAD,EACHxG,oBAAS,GADN,mBACpBmC,EADoB,KACdsE,EADc,KAM3B,OACE,kBAACvE,GAAD,CAAgBC,KAAMA,GACpB,kBAACE,GAAD,CAAqB7B,QALH,WACpBiG,GAAStE,IAIsCA,KAAMA,GAChDA,EAAO,kBAAC,KAAD,MAAyB,kBAAC,KAAD,OAEnC,kBAACC,GAAD,CAAqBD,KAAMA,GACzB,kBAAC,GAAD,SCDOuE,GAVH,WACV,OACE,kBAACzJ,EAAD,KACE,kBAAC,GAAD,MACA,kBAAC,EAAD,MACA,kBAAC,GAAD,QCCc0J,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2D,sCCVtBC,GAAgB,CAC3BnI,WAAY2E,KACZtF,YAAa,GACbqB,oBAAqB,KACrBN,UAAU,EACVG,QAAS,EACTV,eAAgB,EAChBC,UAAW,EACXgB,gBAAiB,CAAEpC,IAAK,EAAGD,IAAK,IA8E5B2J,GAAc,CAElBC,MAGWC,GAAQC,uBACnBC,2BAAgB,CAAErI,YAjFO,WAAoC,IAAnCD,EAAkC,uDAA1BiI,GAAeM,EAAW,uCAE1DC,EAQEvJ,EAPFwJ,EAOExJ,EANFyJ,EAMEzJ,EALF0J,EAKE1J,EAJF2J,EAIE3J,EAHF4J,EAGE5J,EAFF6J,EAEE7J,EADF8J,EACE9J,EAEJ,OAAQsJ,EAAOjJ,MACb,QACE,MACF,KAAKkJ,EACHxI,EAAK,6BACAA,GADA,IAEHF,WAAYyI,EAAOhJ,UAErB,MACF,KAAKkJ,EACHzI,EAAK,6BACAA,GADA,IAEHb,YAAaoJ,EAAOhJ,UAEtB,MACF,KAAKmJ,EACH1I,EAAK,6BACAA,GADA,IAEHQ,oBAAqB+H,EAAOhJ,UAE9B,MACF,KAAKqJ,EACH5I,EAAK,6BACAA,GADA,IAEHE,SAAUqI,EAAOhJ,UAEnB,MACF,KAAKsJ,EACH7I,EAAK,6BACAA,GADA,IAEHL,eAAgB4I,EAAOhJ,UAEzB,MACF,KAAKuJ,EACH9I,EAAK,6BACAA,GADA,IAEHJ,UAAW2I,EAAOhJ,UAEpB,MACF,KAAKwJ,EACH/I,EAAK,6BACAA,GADA,IAEHY,gBAAiB2H,EAAOhJ,UAE1B,MACF,KAAKoJ,EACH3I,EAAK,6BACAiI,IADA,IAEH5H,UAAW4H,GAAc5H,QACzBP,WAAY2E,GACV8D,EAAOhJ,QAAQf,IACf+J,EAAOhJ,QAAQhB,IACfgK,EAAOhJ,QAAQK,WAAaqI,GAAcrI,WAE5CgB,gBAAiB,CAAEpC,IAAK+J,EAAOhJ,QAAQf,IAAKD,IAAKgK,EAAOhJ,QAAQhB,KAChEoB,eAAgB4I,EAAOhJ,QAAQI,eAC/BC,UAAW2I,EAAOhJ,QAAQK,WAAaqI,GAAcrI,YAI3D,OAAOI,KAUP,GACAgJ,+BACEC,mBAAe,WAAf,EAAmBf,MC9FvBgB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUhB,MAAOA,IACf,kBAAC,GAAD,QAGJiB,SAASC,eAAe,SFiHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.604b9c2b.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const AppWrapper = styled.div`\n  background-color: #131315;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n","import styled from 'styled-components/macro';\n\nexport const Grid = styled.div`\n  display: grid;\n  grid-gap: 3rem;\n  grid-template-columns: ${(props) => `repeat(${props.col}, 1fr)`};\n  grid-template-rows: ${(props) => `repeat(${props.row}, 1fr)`};\n  @media only screen and (max-width: 600px) {\n    grid-template-columns: repeat(2, 1fr);\n    grid-template-rows: repeat(5, 1fr);\n  }\n`;\n\nexport const Button = styled.div`\n  border-radius: 4px;\n  background-color: #d35400;\n  border: none;\n  padding: 20px;\n  width: 200px;\n  transition: all 0.5s;\n  margin-top: 100px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  font-size: large;\n  font-weight: bold;\n  color: white;\n`;\n\nexport const Flex = styled.div`\n  display: flex;\n  flex-direction: ${(props) => props.direction || 'row'};\n  justify-content: center;\n  align-items: center;\n  width: ${(props) => props.width};\n`;\n","import styled from 'styled-components/macro';\n\nexport const FLipCardWrapper = styled.div`\n  cursor: pointer;\n  position: relative;\n  height: 25vh;\n  width: 25vh;\n  @media only screen and (max-width: 600px) {\n    height: 12vh;\n    width: 12vh;\n  }\n`;\n\nexport const FLipCardContainer = styled.div`\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  transform-style: preserve-3d;\n  transition: all 1s ease-in-out;\n  transform: ${(props) => props.flip && 'rotateY(180deg)'};\n`;\n\nexport const FlipCardBack = styled.div`\n  backface-visibility: hidden;\n  border-radius: 6px;\n  height: 100%;\n  position: absolute;\n  overflow: hidden;\n  width: 100%;\n`;\n\nexport const FlipCardFront = styled(FlipCardBack)`\n  background: #eaeaed;\n  color: #0087cc;\n  text-align: center;\n  transform: rotateY(180deg);\n  border-radius: 6px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 5rem;\n`;\n","export const actionType = {\n  SET_GAME_MATRIX: 'SET_GAME_MATRIX',\n  UPDATE_OPENED_CARDS: 'UPDATE_OPENED_CARDS',\n  CLOSE_IMAGE_WITH_INDEX: 'CLOSE_IMAGE_WITH_INDEX',\n  RESET_STATE: 'RESET_STATE',\n  GAME_OVER: 'GAME_OVER',\n  SET_GAME_DIFFICULTY: 'SET_GAME_DIFFICULTY',\n  SET_ICON_STYLE: 'SET_ICON_STYLE',\n  SET_MATRIX_DIMENSION: 'SET_MATRIX_DIMENSION',\n};\n","import { actionType } from './constants';\n\nexport const setOpenedCards = (openedCards) => {\n  return async (dispatch) => {\n    return dispatch({ type: actionType.UPDATE_OPENED_CARDS, payload: [...openedCards] });\n  };\n};\n\nexport const closeImage = (imageId) => {\n  return async (dispatch) => {\n    return dispatch({ type: actionType.CLOSE_IMAGE_WITH_INDEX, payload: imageId });\n  };\n};\n\nexport const resetGame = ({ row, col, gameDifficulty, iconStyle }) => {\n  return async (dispatch) => {\n    return dispatch({\n      type: actionType.RESET_STATE,\n      payload: { row, col, gameDifficulty, iconStyle },\n    });\n  };\n};\n\nexport const setGameOver = (isGameOver) => {\n  return async (dispatch) => {\n    return dispatch({ type: actionType.GAME_OVER, payload: isGameOver });\n  };\n};\n\nexport const setGameDifficulty = (gameDifficulty) => {\n  return async (dispatch) => {\n    return dispatch({ type: actionType.SET_GAME_DIFFICULTY, payload: gameDifficulty });\n  };\n};\n\nexport const setIconStyle = (iconStyle) => {\n  return async (dispatch) => {\n    return dispatch({ type: actionType.SET_ICON_STYLE, payload: iconStyle });\n  };\n};\n\nexport const setMatrixDimension = (matrixDimension) => {\n  return async (dispatch) => {\n    return dispatch({ type: actionType.SET_MATRIX_DIMENSION, payload: matrixDimension });\n  };\n};\n\nexport const setGameMatrix = (gameMatrix) => {\n  return async (dispatch) => {\n    return dispatch({ type: actionType.SET_GAME_MATRIX, payload: gameMatrix });\n  };\n};\n","export const getGameOver = (state) => state.gameReducer.gameOver;\n\nexport const getGameMatrix = (state) => state.gameReducer.gameMatrix;\n\nexport const getGameKey = (state) => state.gameReducer.gameKey;\n\nexport const getOpenCards = (state) => state.gameReducer.openedCards;\n\nexport const getCLoseImageWithIndex = (state) => state.gameReducer.closeImageWithIndex;\n\nexport const getGameDifficulty = (state) => state.gameReducer.gameDifficulty;\n\nexport const getIconStyle = (state) => state.gameReducer.iconStyle;\n\nexport const getMatrixDimension = (state) => state.gameReducer.matrixDimension;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { FlipCardBack, FLipCardContainer, FlipCardFront, FLipCardWrapper } from './FlipCard.Styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { closeImage, setGameOver, setOpenedCards } from '../../store/thunks';\nimport { getCLoseImageWithIndex, getMatrixDimension, getOpenCards } from '../../store/selectors';\n\nconst FlipCard = ({ FrontSide, backSide, imageId, imageIndex }) => {\n  const [flip, setIsFrontSide] = useState(false);\n  const openedCards = useSelector(getOpenCards);\n  const closeImageWithIndex = useSelector(getCLoseImageWithIndex);\n  const matrixDimension = useSelector(getMatrixDimension);\n  const dispatch = useDispatch();\n\n  const flipCardWithTimeout = (time, flip) => {\n    setTimeout(() => {\n      setIsFrontSide(flip);\n    }, time);\n  };\n\n  useEffect(() => {\n    // Open card after 500ms\n    flipCardWithTimeout(500, true);\n    // Close card after 5sec\n    flipCardWithTimeout(1500, false);\n  }, []);\n\n  useEffect(() => {\n    if (closeImageWithIndex === imageIndex) {\n      flipCardWithTimeout(2000, !flip);\n      dispatch(closeImage(null));\n    }\n  }, [closeImageWithIndex, imageIndex, dispatch, flip]);\n\n  const onClick = () => {\n    setIsFrontSide(!flip);\n\n    if (openedCards.length >= matrixDimension.row * matrixDimension.col - 1) {\n      dispatch(setGameOver(true));\n      return;\n    }\n    if (openedCards.length % 2 === 0) {\n      openedCards.push({ imageId, imageIndex });\n      dispatch(setOpenedCards(openedCards));\n      return;\n    }\n    // If 2nd card opened & does not match the previous card then close the card\n    if (openedCards.length % 2 === 1 && !openedCards.find((card) => card.imageId === imageId)) {\n      // Close card after 2sec\n      flipCardWithTimeout(2000, false);\n      // Remove previous image\n      dispatch(closeImage(openedCards.pop().imageIndex));\n    } else {\n      openedCards.push({ imageId, imageIndex });\n    }\n    dispatch(setOpenedCards(openedCards));\n  };\n  return (\n    <FLipCardWrapper>\n      <FLipCardContainer onClick={onClick} flip={flip}>\n        <FlipCardFront>\n          <FrontSide />\n        </FlipCardFront>\n        <FlipCardBack>{backSide}</FlipCardBack>\n      </FLipCardContainer>\n    </FLipCardWrapper>\n  );\n};\n\nexport default FlipCard;\n\nFlipCard.propTypes = {\n  FrontSide: PropTypes.element,\n  backSide: PropTypes.element,\n  imageId: PropTypes.number,\n  imageIndex: PropTypes.number,\n};\n\nFlipCard.defaultProps = {\n  frontSide: <div>Front</div>,\n  backSide: <div>Back</div>,\n};\n","import styled, { keyframes } from 'styled-components/macro';\n\nexport const ImageCardWrapper = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n\nconst GradientAnimation = keyframes`\n  0% {\nbackground-position: 0% 50%;\n}\n50% {\nbackground-position: 100% 50%;\n}\n100% {\nbackground-position: 0% 50%;\n}\n`;\nexport const CardBackSide = styled.div`\n  width: 100%;\n  height: 100%;\n  border-radius: 6px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: linear-gradient(-45deg, #ee2943, #e7da65, #23a6d5, #23d5ab);\n  background-size: 400% 400%;\n  animation: ${GradientAnimation} 5s ease infinite;\n`;\n","import React from 'react';\nimport { Grid } from '../common/Common.Styles';\nimport FlipCard from '../flipCard/FlipCard';\nimport { CardBackSide } from './CardList.Styles';\nimport { useSelector } from 'react-redux';\nimport { getGameKey, getGameMatrix, getMatrixDimension } from '../../store/selectors';\n\nconst CardList = () => {\n  const gameMatrix = useSelector(getGameMatrix);\n  const gameKey = useSelector(getGameKey);\n  const matrixDimension = useSelector(getMatrixDimension);\n  let cards = gameMatrix\n    ? gameMatrix.map((item, index) => (\n        <FlipCard\n          key={`${gameKey}_${index}`}\n          imageId={item.imageId}\n          imageIndex={item.index}\n          backSide={<CardBackSide />}\n          FrontSide={item.image}\n        />\n      ))\n    : null;\n\n  return (\n    <Grid key={gameKey} row={matrixDimension.row} col={matrixDimension.col}>\n      {cards}\n    </Grid>\n  );\n};\n\nexport default CardList;\n","import styled, { keyframes } from 'styled-components';\n\nconst FadeIn = keyframes`\n  from { opacity: 0; }\n  to   { opacity: 1; }\n`;\n\nconst FadeOut = keyframes`\n  from { opacity: 1; }\n  to   { opacity: 0; }\n`;\n\nexport const ToastWrapper = styled.div`\n  width: 200px;\n  height: auto;\n  position: absolute;\n  left: 50%;\n  margin-left: -100px;\n  bottom: 10px;\n  background-color: #35bc7a;\n  color: #f0f0f0;\n  font-size: 20px;\n  padding: 10px;\n  text-align: center;\n  border-radius: 7px;\n  -webkit-box-shadow: 0px 0px 24px -1px rgba(56, 56, 56, 1);\n  -moz-box-shadow: 0px 0px 24px -1px rgba(56, 56, 56, 1);\n  box-shadow: 0px 0px 24px -1px rgba(56, 56, 56, 1);\n  animation: ${FadeIn} forwards 1000ms;\n  animation: ${FadeOut} forwards 30000ms;\n`;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { ToastWrapper } from './Toast.Styles';\n\nconst Toast = (props) => <ToastWrapper>{props.children}</ToastWrapper>;\n\nexport default Toast;\n\nToast.propTypes = {\n  children: PropTypes.any,\n};\n","import React from 'react';\nimport Toast from '../toast/Toast';\nimport { Button } from '../common/Common.Styles';\nimport { resetGame, setOpenedCards } from '../../store/thunks';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getGameOver, getMatrixDimension } from '../../store/selectors';\n\nconst GameOver = () => {\n  const gameOver = useSelector(getGameOver);\n  const matrixDimension = useSelector(getMatrixDimension);\n  const dispatch = useDispatch();\n  return (\n    <>\n      {gameOver && (\n        <>\n          <Toast>You won!</Toast>\n          <Button\n            onClick={() => {\n              dispatch(resetGame());\n              dispatch(setOpenedCards([]));\n              dispatch(resetGame({ row: matrixDimension.row, col: matrixDimension.col }));\n            }}\n          >\n            Restart\n          </Button>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default GameOver;\n","import styled from 'styled-components/macro';\n\nexport const SideBarWrapper = styled.div`\n  background-color: #29292e;\n  height: 100%;\n  width: ${(props) => (props.open ? '20%' : '1%')};\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 1;\n  opacity: 0.75;\n  transition: width 1s ease-out, opaicty 2s ease-out;\n`;\n\nexport const SideBarInnerWrapper = styled.div`\n  position: relative;\n  overflow: hidden;\n  opacity: ${(props) => (props.open ? 1 : 0)};\n  transition: opacity 800ms ease-in;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const SliderButtonWrapper = styled.div`\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: whitesmoke;\n  height: 1.5rem;\n  width: 1.5rem;\n  border-radius: 0.75rem;\n  right: 0;\n  top: ${(props) => (props.open ? '1%' : '5%')};\n  transform: translateX(50%);\n  font-size: 1.5rem;\n  cursor: pointer;\n  z-index: 2;\n  transition: top 1s ease;\n  &:hover {\n    box-shadow: 0 2px 15px 0 rgba(0, 0, 0, 0.86);\n    background-color: black;\n    color: whitesmoke;\n  }\n`;\n","import styled from 'styled-components/macro';\n\nexport const SideBarContentWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  height: 100vh;\n  padding-top: 2rem;\n  padding-bottom: 2rem;\n`;\n\nexport const SideBarSliderLabelsWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const SidebarImageWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 2.5rem;\n`;\n","// import React from 'react';\nimport * as Si from 'react-icons/si';\nimport * as Fa from 'react-icons/fa';\nimport * as Vsc from 'react-icons/vsc';\nimport * as Wi from 'react-icons/wi';\nimport * as Gi from 'react-icons/gi';\nimport * as Di from 'react-icons/di';\n\nconst iconMap = [Di, Fa, Vsc, Wi, Gi, Si];\nexport const getCardIcons = (iconStyle = 0) => {\n  if (iconStyle >= 0) {\n    // const imports = await import(`node${iconMap[iconStyle]}`);\n    // const imports =  await import(`../../../node_modules/${iconMap[iconStyle]}`);\n    return iconMap[iconStyle];\n  }\n};\n","import { getCardIcons } from '../components/cardList/CardIcons';\n\n/**\n *\n * @param array\n * @returns {*[]}\n */\nexport const getShuffledArray = (array = []) => {\n  const shuffledArray = [...array];\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n  }\n  return shuffledArray;\n};\n\n/**\n *\n * @param row\n * @param col\n * @param iconStyle\n * @returns {*[]}\n */\nexport const getInitialLayout = (row = 2, col = 5, iconStyle = 0) => {\n  const imageArray = [];\n  const icons = Object.values(getCardIcons(iconStyle));\n  for (let i = 0, imageCounter = 0; i < row * col; i += 2, imageCounter++) {\n    const IconComponent = icons[imageCounter];\n    // push image pair\n    imageArray.push({ imageId: imageCounter, image: IconComponent, index: i });\n    imageArray.push({ imageId: imageCounter, image: IconComponent, index: i + 1 });\n  }\n  return getShuffledArray(imageArray);\n};\n\n/**\n *\n * @param cardArray\n * @param row\n * @param col\n * @param iconStyle\n * @returns {*[]}\n */\nexport const replaceImagesInLayout = (cardArray, row = 2, col = 5, iconStyle = 0) => {\n  debugger;\n  // get unique imageIds\n  const imageIds = Array.from(new Set(cardArray.map((card) => card.imageId)));\n  const icons = Object.values(getCardIcons(iconStyle));\n\n  // filter out and change both items' images with new image\n  imageIds.forEach((imageId, imageCounter) => {\n    const IconComponent = icons[imageCounter];\n    const cardsWithImageId = cardArray.filter((card) => card.imageId === imageId);\n\n    // replace image for both cards with new image\n    cardsWithImageId.forEach((card) => (card.image = IconComponent));\n  });\n\n  return [...cardArray];\n};\n","import styled from 'styled-components';\n\nexport const SelectButtonWrapper = styled.div`\n  transition: 0.4s;\n  background: ${(props) => (props.active ? '#007aff' : '#fff')};\n  color: ${(props) => (props.active ? '#fff' : '#007aff')};\n  border-radius: 6px;\n  border: ${(props) => (props.active ? '1px solid #fff' : '1px solid #007aff')};\n  height: ${(props) => props.height || '2rem'};\n  width: ${(props) => props.width || '2rem'};\n  font: 14px/36px 'Roboto', sans-serif !important;\n  padding: 0 12px;\n  position: relative;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  &:hover {\n    transition: 0.4s;\n    background: ${(props) => (props.active ? '#007aff' : '#fff')};\n    box-shadow: 0 2px 15px 0 rgba(0, 0, 0, 0.56);\n    border: 1px solid #007aff;\n  }\n`;\n\nexport const SelectButtonGroupWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 90%;\n  margin-bottom: 2rem;\n`;\n\nexport const SelectButtonGroupWrapperGrid = styled.div`\n  display: grid;\n  grid-gap: 3rem;\n  grid-template-columns: ${(props) => `repeat(${props.cols}, 1fr)`};\n  grid-template-rows: ${(props) => `repeat(${props.rows}, 1fr)`};\n`;\n\nexport const SideBarContentTitle = styled.h3`\n  color: white;\n`\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  SelectButtonGroupWrapper,\n  SelectButtonGroupWrapperGrid,\n  SelectButtonWrapper, SideBarContentTitle,\n} from './SelectButtonGroup.styles';\n\nconst wrapperMap = {\n  grid: SelectButtonGroupWrapperGrid,\n  flex: SelectButtonGroupWrapper,\n};\nconst SelectButtonGroup = ({\n  contents,\n  onSelect,\n  selectedIndex,\n  title,\n  wrapperType,\n  rows,\n  cols,\n  height,\n  width,\n}) => {\n  const WrapperComponent = wrapperMap[wrapperType];\n  return (\n    <>\n      <SideBarContentTitle>{title}</SideBarContentTitle>\n      <WrapperComponent rows={rows} cols={cols}>\n        {contents.map((label, index) => (\n          <SelectButtonWrapper\n            key={label}\n            onClick={() => onSelect(index)}\n            active={selectedIndex === index}\n            height={height}\n            width={width}\n          >\n            {label}\n          </SelectButtonWrapper>\n        ))}\n      </WrapperComponent>\n    </>\n  );\n};\n\nexport default SelectButtonGroup;\n\nSelectButtonGroup.propTypes = {\n  contents: PropTypes.array,\n  onSelect: PropTypes.func,\n  selectedIndex: PropTypes.number,\n  rows: PropTypes.number,\n  cols: PropTypes.number,\n  title: PropTypes.string,\n  width: PropTypes.string,\n  height: PropTypes.string,\n  wrapperType: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { DiAndroid } from 'react-icons/di';\nimport { Fa500Px } from 'react-icons/fa';\nimport { VscAccount } from 'react-icons/vsc';\nimport { WiDayShowers } from 'react-icons/wi';\nimport { GiSkullSabertooth } from 'react-icons/gi';\nimport { SiAmazon } from 'react-icons/si';\nimport {\n  resetGame,\n  setGameDifficulty,\n  setGameMatrix,\n  setIconStyle,\n  setMatrixDimension,\n} from '../../store/thunks';\nimport { SideBarContentWrapper, SidebarImageWrapper } from './SideBarContent.styles';\nimport { getInitialLayout, replaceImagesInLayout } from '../../store/utils';\nimport SelectButtonGroup from '../selectButtonGroup/SelectButtonGroup';\nimport { getGameDifficulty, getGameMatrix, getIconStyle } from '../../store/selectors';\n\nconst getMatrixDimension = (gameDifficulty) => {\n  switch (gameDifficulty) {\n    case 0:\n      return { row: 2, col: 3 };\n    default:\n    case 1:\n      return { row: 2, col: 5 };\n    case 2:\n      return { row: 3, col: 6 };\n  }\n};\n\nconst SideBarContent = () => {\n  const dispatch = useDispatch();\n  const gameDifficulty = useSelector(getGameDifficulty);\n  const iconStyle = useSelector(getIconStyle);\n  const gameMatrix = useSelector(getGameMatrix);\n  const onSelect = (gameDifficulty) => {\n    const matrixDimension = getMatrixDimension(parseInt(gameDifficulty, 10));\n    dispatch(setMatrixDimension(matrixDimension));\n    dispatch(setGameDifficulty(gameDifficulty));\n    dispatch(setGameMatrix(getInitialLayout(matrixDimension.row, matrixDimension.col)));\n    dispatch(\n      resetGame({ row: matrixDimension.row, col: matrixDimension.col, gameDifficulty, iconStyle })\n    );\n  };\n\n  const onStyleSelect = (iconStyle) => {\n    const matrixDimension = getMatrixDimension(parseInt(gameDifficulty, 10));\n    dispatch(setIconStyle(iconStyle));\n    dispatch(\n      setGameMatrix(\n        replaceImagesInLayout(gameMatrix, matrixDimension.row, matrixDimension.col, iconStyle)\n      )\n    );\n  };\n\n  const imageButtons = [\n    SiAmazon,\n    Fa500Px,\n    VscAccount,\n    WiDayShowers,\n    GiSkullSabertooth,\n    DiAndroid,\n  ].map((ImageComponent, index) => (\n    <SidebarImageWrapper key={index}>\n      <ImageComponent />\n    </SidebarImageWrapper>\n  ));\n  return (\n    <SideBarContentWrapper>\n      <SelectButtonGroup\n        title=\"Difficulty\"\n        wrapperType=\"flex\"\n        contents={['Easy', 'Medium', 'Hard']}\n        onSelect={onSelect}\n        selectedIndex={gameDifficulty}\n      />\n      <SelectButtonGroup\n        title=\"Style\"\n        wrapperType=\"grid\"\n        rows={3}\n        cols={2}\n        height=\"3rem\"\n        width=\"3rem\"\n        contents={imageButtons}\n        onSelect={onStyleSelect}\n        selectedIndex={iconStyle}\n      />\n    </SideBarContentWrapper>\n  );\n};\n\nexport default SideBarContent;\n","import React, { useState } from 'react';\nimport { IoIosArrowDropright, IoIosArrowDropleft } from 'react-icons/io';\nimport { SideBarInnerWrapper, SideBarWrapper, SliderButtonWrapper } from './SideBar.styles';\nimport SideBarContent from '../sideBarContent/SideBarContent';\n\nexport const SideBar = () => {\n  const [open, setOpen] = useState(false);\n\n  const toggleSideBar = () => {\n    setOpen(!open);\n  };\n  return (\n    <SideBarWrapper open={open}>\n      <SliderButtonWrapper onClick={toggleSideBar} open={open}>\n        {open ? <IoIosArrowDropleft /> : <IoIosArrowDropright />}\n      </SliderButtonWrapper>\n      <SideBarInnerWrapper open={open}>\n        <SideBarContent />\n      </SideBarInnerWrapper>\n    </SideBarWrapper>\n  );\n};\n","import React from 'react';\nimport { AppWrapper } from './App.styles';\nimport CardList from '../cardList/CardList';\nimport GameOver from '../gameOver/GameOver';\nimport { SideBar } from '../sideBar/SideBar';\n\nconst App = () => {\n  return (\n    <AppWrapper>\n      <SideBar />\n      <CardList />\n      <GameOver />\n    </AppWrapper>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\n// import { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { actionType } from './constants';\nimport { getInitialLayout } from './utils';\n\nexport const INITIAL_STATE = {\n  gameMatrix: getInitialLayout(),\n  openedCards: [],\n  closeImageWithIndex: null,\n  gameOver: false,\n  gameKey: 1,\n  gameDifficulty: 1,\n  iconStyle: 0,\n  matrixDimension: { row: 2, col: 5 },\n};\n\nexport const gameReducer = (state = INITIAL_STATE, action) => {\n  const {\n    SET_GAME_MATRIX,\n    UPDATE_OPENED_CARDS,\n    CLOSE_IMAGE_WITH_INDEX,\n    RESET_STATE,\n    GAME_OVER,\n    SET_GAME_DIFFICULTY,\n    SET_ICON_STYLE,\n    SET_MATRIX_DIMENSION,\n  } = actionType;\n\n  switch (action.type) {\n    default:\n      break;\n    case SET_GAME_MATRIX:\n      state = {\n        ...state,\n        gameMatrix: action.payload,\n      };\n      break;\n    case UPDATE_OPENED_CARDS:\n      state = {\n        ...state,\n        openedCards: action.payload,\n      };\n      break;\n    case CLOSE_IMAGE_WITH_INDEX:\n      state = {\n        ...state,\n        closeImageWithIndex: action.payload,\n      };\n      break;\n    case GAME_OVER:\n      state = {\n        ...state,\n        gameOver: action.payload,\n      };\n      break;\n    case SET_GAME_DIFFICULTY:\n      state = {\n        ...state,\n        gameDifficulty: action.payload,\n      };\n      break;\n    case SET_ICON_STYLE:\n      state = {\n        ...state,\n        iconStyle: action.payload,\n      };\n      break;\n    case SET_MATRIX_DIMENSION:\n      state = {\n        ...state,\n        matrixDimension: action.payload,\n      };\n      break;\n    case RESET_STATE:\n      state = {\n        ...INITIAL_STATE,\n        gameKey: ++INITIAL_STATE.gameKey,\n        gameMatrix: getInitialLayout(\n          action.payload.row,\n          action.payload.col,\n          action.payload.iconStyle || INITIAL_STATE.iconStyle\n        ),\n        matrixDimension: { row: action.payload.row, col: action.payload.col },\n        gameDifficulty: action.payload.gameDifficulty,\n        iconStyle: action.payload.iconStyle || INITIAL_STATE.iconStyle,\n      };\n      break;\n  }\n  return state;\n};\n\nconst middlewares = [\n  // createLogger(),\n  thunk,\n];\n\nexport const store = createStore(\n  combineReducers({ gameReducer }),\n  {},\n  composeWithDevTools(\n    applyMiddleware(...middlewares)\n    // other store enhancers if any\n  )\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\nimport { store } from './store/AppStore';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}