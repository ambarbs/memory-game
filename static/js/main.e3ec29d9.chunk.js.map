{"version":3,"sources":["components/app/App.styles.js","components/common/Common.Styles.js","components/flipCard/FlipCard.Styles.js","store/constants.js","store/thunks.js","store/selectors.js","components/flipCard/FlipCard.js","components/cardList/CardList.Styles.js","components/cardList/CardList.js","components/toast/Toast.Styles.js","components/toast/Toast.js","components/gameOver/GameOver.js","components/sideBar/SideBar.styles.js","components/sideBarContent/SideBarContent.styles.js","components/cardList/CardIcons.js","store/utils.js","components/selectButtonGroup/SelectButtonGroup.styles.js","components/selectButtonGroup/SelectButtonGroup.js","components/sideBarContent/SideBarContent.js","components/sideBar/SideBar.js","components/app/App.js","serviceWorker.js","store/AppStore.js","index.js"],"names":["AppWrapper","styled","div","Grid","props","col","row","Button","direction","width","FLipCardWrapper","FLipCardContainer","flip","FlipCardBack","FlipCardFront","actionType","setOpenedCards","openedCards","dispatch","a","type","payload","closeImage","imageId","resetGame","gameDifficulty","iconStyle","setGameMatrix","gameMatrix","getGameOver","state","gameReducer","gameOver","getGameMatrix","getGameKey","gameKey","getOpenCards","getCLoseImageWithIndex","closeImageWithIndex","getGameDifficulty","getIconStyle","getMatrixDimension","matrixDimension","FlipCard","FrontSide","backSide","imageIndex","useState","setIsFrontSide","useSelector","useDispatch","flipCardWithTimeout","time","setTimeout","useEffect","onClick","length","isGameOver","push","find","card","pop","defaultProps","frontSide","img","GradientAnimation","keyframes","CardBackSide","CardList","cards","map","item","index","key","image","FadeIn","FadeOut","ToastWrapper","Toast","children","GameOver","SideBarWrapper","open","SideBarInnerWrapper","SliderButtonWrapper","SideBarContentWrapper","SidebarImageWrapper","iconMap","Di","Fa","Vsc","Wi","Gi","Si","getCardIcons","getShuffledArray","array","shuffledArray","i","j","Math","floor","random","getInitialLayout","imageArray","icons","Object","values","imageCounter","IconComponent","SelectButtonWrapper","active","height","SelectButtonGroupWrapper","SelectButtonGroupWrapperGrid","cols","rows","SideBarContentTitle","h3","wrapperMap","grid","flex","SelectButtonGroup","contents","onSelect","selectedIndex","title","wrapperType","WrapperComponent","label","SideBarContent","imageButtons","SiAmazon","Fa500Px","VscAccount","WiDayShowers","GiSkullSabertooth","DiAndroid","ImageComponent","parseInt","setMatrixDimension","setGameDifficulty","setIconStyle","cardArray","imageIds","Array","from","Set","forEach","filter","replaceImagesInLayout","SideBar","setOpen","App","Boolean","window","location","hostname","match","INITIAL_STATE","middlewares","thunk","store","createStore","combineReducers","action","SET_GAME_MATRIX","UPDATE_OPENED_CARDS","CLOSE_IMAGE_WITH_INDEX","RESET_STATE","GAME_OVER","SET_GAME_DIFFICULTY","SET_ICON_STYLE","SET_MATRIX_DIMENSION","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e3ec29d9.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const AppWrapper = styled.div`\r\n  background-color: #131315;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n`;\r\n","import styled from 'styled-components/macro';\r\n\r\nexport const Grid = styled.div`\r\n  display: grid;\r\n  grid-gap: 3rem;\r\n  grid-template-columns: ${(props) => `repeat(${props.col}, 1fr)`};\r\n  grid-template-rows: ${(props) => `repeat(${props.row}, 1fr)`};\r\n  @media only screen and (max-width: 600px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n    grid-template-rows: repeat(5, 1fr);\r\n  }\r\n`;\r\n\r\nexport const Button = styled.div`\r\n  border-radius: 4px;\r\n  background-color: #d35400;\r\n  border: none;\r\n  padding: 20px;\r\n  width: 200px;\r\n  transition: all 0.5s;\r\n  margin-top: 100px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  font-size: large;\r\n  font-weight: bold;\r\n  color: white;\r\n`;\r\n\r\nexport const Flex = styled.div`\r\n  display: flex;\r\n  flex-direction: ${(props) => props.direction || 'row'};\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: ${(props) => props.width};\r\n`;\r\n","import styled from 'styled-components/macro';\r\n\r\nexport const FLipCardWrapper = styled.div`\r\n  cursor: pointer;\r\n  position: relative;\r\n  height: 25vh;\r\n  width: 25vh;\r\n  @media only screen and (max-width: 600px) {\r\n    height: 12vh;\r\n    width: 12vh;\r\n  }\r\n`;\r\n\r\nexport const FLipCardContainer = styled.div`\r\n  position: absolute;\r\n  height: 100%;\r\n  width: 100%;\r\n  transform-style: preserve-3d;\r\n  transition: all 1s ease-in-out;\r\n  transform: ${(props) => props.flip && 'rotateY(180deg)'};\r\n`;\r\n\r\nexport const FlipCardBack = styled.div`\r\n  backface-visibility: hidden;\r\n  border-radius: 6px;\r\n  height: 100%;\r\n  position: absolute;\r\n  overflow: hidden;\r\n  width: 100%;\r\n`;\r\n\r\nexport const FlipCardFront = styled(FlipCardBack)`\r\n  background: #eaeaed;\r\n  color: #0087cc;\r\n  text-align: center;\r\n  transform: rotateY(180deg);\r\n  border-radius: 6px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 5rem;\r\n`;\r\n","export const actionType = {\r\n  SET_GAME_MATRIX: 'SET_GAME_MATRIX',\r\n  UPDATE_OPENED_CARDS: 'UPDATE_OPENED_CARDS',\r\n  CLOSE_IMAGE_WITH_INDEX: 'CLOSE_IMAGE_WITH_INDEX',\r\n  RESET_STATE: 'RESET_STATE',\r\n  GAME_OVER: 'GAME_OVER',\r\n  SET_GAME_DIFFICULTY: 'SET_GAME_DIFFICULTY',\r\n  SET_ICON_STYLE: 'SET_ICON_STYLE',\r\n  SET_MATRIX_DIMENSION: 'SET_MATRIX_DIMENSION',\r\n};\r\n","import { actionType } from './constants';\r\n\r\nexport const setOpenedCards = (openedCards) => {\r\n  return async (dispatch) => {\r\n    return dispatch({ type: actionType.UPDATE_OPENED_CARDS, payload: [...openedCards] });\r\n  };\r\n};\r\n\r\nexport const closeImage = (imageId) => {\r\n  return async (dispatch) => {\r\n    return dispatch({ type: actionType.CLOSE_IMAGE_WITH_INDEX, payload: imageId });\r\n  };\r\n};\r\n\r\nexport const resetGame = ({ row, col, gameDifficulty, iconStyle }) => {\r\n  return async (dispatch) => {\r\n    return dispatch({\r\n      type: actionType.RESET_STATE,\r\n      payload: { row, col, gameDifficulty, iconStyle },\r\n    });\r\n  };\r\n};\r\n\r\nexport const setGameOver = (isGameOver) => {\r\n  return async (dispatch) => {\r\n    return dispatch({ type: actionType.GAME_OVER, payload: isGameOver });\r\n  };\r\n};\r\n\r\nexport const setGameDifficulty = (gameDifficulty) => {\r\n  return async (dispatch) => {\r\n    return dispatch({ type: actionType.SET_GAME_DIFFICULTY, payload: gameDifficulty });\r\n  };\r\n};\r\n\r\nexport const setIconStyle = (iconStyle) => {\r\n  return async (dispatch) => {\r\n    return dispatch({ type: actionType.SET_ICON_STYLE, payload: iconStyle });\r\n  };\r\n};\r\n\r\nexport const setMatrixDimension = (matrixDimension) => {\r\n  return async (dispatch) => {\r\n    return dispatch({ type: actionType.SET_MATRIX_DIMENSION, payload: matrixDimension });\r\n  };\r\n};\r\n\r\nexport const setGameMatrix = (gameMatrix) => {\r\n  return async (dispatch) => {\r\n    return dispatch({ type: actionType.SET_GAME_MATRIX, payload: gameMatrix });\r\n  };\r\n};\r\n","export const getGameOver = (state) => state.gameReducer.gameOver;\r\n\r\nexport const getGameMatrix = (state) => state.gameReducer.gameMatrix;\r\n\r\nexport const getGameKey = (state) => state.gameReducer.gameKey;\r\n\r\nexport const getOpenCards = (state) => state.gameReducer.openedCards;\r\n\r\nexport const getCLoseImageWithIndex = (state) => state.gameReducer.closeImageWithIndex;\r\n\r\nexport const getGameDifficulty = (state) => state.gameReducer.gameDifficulty;\r\n\r\nexport const getIconStyle = (state) => state.gameReducer.iconStyle;\r\n\r\nexport const getMatrixDimension = (state) => state.gameReducer.matrixDimension;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FlipCardBack, FLipCardContainer, FlipCardFront, FLipCardWrapper } from './FlipCard.Styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { closeImage, setGameOver, setOpenedCards } from '../../store/thunks';\r\nimport { getCLoseImageWithIndex, getMatrixDimension, getOpenCards } from '../../store/selectors';\r\n\r\nconst FlipCard = ({ FrontSide, backSide, imageId, imageIndex }) => {\r\n  const [flip, setIsFrontSide] = useState(false);\r\n  const openedCards = useSelector(getOpenCards);\r\n  const closeImageWithIndex = useSelector(getCLoseImageWithIndex);\r\n  const matrixDimension = useSelector(getMatrixDimension);\r\n  const dispatch = useDispatch();\r\n\r\n  const flipCardWithTimeout = (time, flip) => {\r\n    setTimeout(() => {\r\n      setIsFrontSide(flip);\r\n    }, time);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Open card after 500ms\r\n    flipCardWithTimeout(500, true);\r\n    // Close card after 5sec\r\n    flipCardWithTimeout(1500, false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (closeImageWithIndex === imageIndex) {\r\n      flipCardWithTimeout(2000, !flip);\r\n      dispatch(closeImage(null));\r\n    }\r\n  }, [closeImageWithIndex, imageIndex, dispatch, flip]);\r\n\r\n  const onClick = () => {\r\n    setIsFrontSide(!flip);\r\n\r\n    if (openedCards.length >= matrixDimension.row * matrixDimension.col - 1) {\r\n      dispatch(setGameOver(true));\r\n      return;\r\n    }\r\n    if (openedCards.length % 2 === 0) {\r\n      openedCards.push({ imageId, imageIndex });\r\n      dispatch(setOpenedCards(openedCards));\r\n      return;\r\n    }\r\n    // If 2nd card opened & does not match the previous card then close the card\r\n    if (openedCards.length % 2 === 1 && !openedCards.find((card) => card.imageId === imageId)) {\r\n      // Close card after 2sec\r\n      flipCardWithTimeout(2000, false);\r\n      // Remove previous image\r\n      dispatch(closeImage(openedCards.pop().imageIndex));\r\n    } else {\r\n      openedCards.push({ imageId, imageIndex });\r\n    }\r\n    dispatch(setOpenedCards(openedCards));\r\n  };\r\n  return (\r\n    <FLipCardWrapper>\r\n      <FLipCardContainer onClick={onClick} flip={flip}>\r\n        <FlipCardFront>\r\n          <FrontSide />\r\n        </FlipCardFront>\r\n        <FlipCardBack>{backSide}</FlipCardBack>\r\n      </FLipCardContainer>\r\n    </FLipCardWrapper>\r\n  );\r\n};\r\n\r\nexport default FlipCard;\r\n\r\nFlipCard.propTypes = {\r\n  FrontSide: PropTypes.element,\r\n  backSide: PropTypes.element,\r\n  imageId: PropTypes.number,\r\n  imageIndex: PropTypes.number,\r\n};\r\n\r\nFlipCard.defaultProps = {\r\n  frontSide: <div>Front</div>,\r\n  backSide: <div>Back</div>,\r\n};\r\n","import styled, { keyframes } from 'styled-components/macro';\r\n\r\nexport const ImageCardWrapper = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst GradientAnimation = keyframes`\r\n  0% {\r\nbackground-position: 0% 50%;\r\n}\r\n50% {\r\nbackground-position: 100% 50%;\r\n}\r\n100% {\r\nbackground-position: 0% 50%;\r\n}\r\n`;\r\nexport const CardBackSide = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 6px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: linear-gradient(-45deg, #ee2943, #e7da65, #23a6d5, #23d5ab);\r\n  background-size: 400% 400%;\r\n  animation: ${GradientAnimation} 5s ease infinite;\r\n`;\r\n","import React from 'react';\r\nimport { Grid } from '../common/Common.Styles';\r\nimport FlipCard from '../flipCard/FlipCard';\r\nimport { CardBackSide } from './CardList.Styles';\r\nimport { useSelector } from 'react-redux';\r\nimport { getGameKey, getGameMatrix, getMatrixDimension } from '../../store/selectors';\r\n\r\nconst CardList = () => {\r\n  const gameMatrix = useSelector(getGameMatrix);\r\n  const gameKey = useSelector(getGameKey);\r\n  const matrixDimension = useSelector(getMatrixDimension);\r\n  let cards = gameMatrix\r\n    ? gameMatrix.map((item, index) => (\r\n        <FlipCard\r\n          key={`${gameKey}_${index}`}\r\n          imageId={item.imageId}\r\n          imageIndex={item.index}\r\n          backSide={<CardBackSide />}\r\n          FrontSide={item.image}\r\n        />\r\n      ))\r\n    : null;\r\n\r\n  return (\r\n    <Grid key={gameKey} row={matrixDimension.row} col={matrixDimension.col}>\r\n      {cards}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import styled, { keyframes } from 'styled-components';\n\nconst FadeIn = keyframes`\n  from { opacity: 0; }\n  to   { opacity: 1; }\n`;\n\nconst FadeOut = keyframes`\n  from { opacity: 1; }\n  to   { opacity: 0; }\n`;\n\nexport const ToastWrapper = styled.div`\n  width: 200px;\n  height: auto;\n  position: absolute;\n  left: 50%;\n  margin-left: -100px;\n  bottom: 10px;\n  background-color: #35bc7a;\n  color: #f0f0f0;\n  font-size: 20px;\n  padding: 10px;\n  text-align: center;\n  border-radius: 7px;\n  -webkit-box-shadow: 0px 0px 24px -1px rgba(56, 56, 56, 1);\n  -moz-box-shadow: 0px 0px 24px -1px rgba(56, 56, 56, 1);\n  box-shadow: 0px 0px 24px -1px rgba(56, 56, 56, 1);\n  animation: ${FadeIn} forwards 1000ms;\n  animation: ${FadeOut} forwards 30000ms;\n`;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { ToastWrapper } from './Toast.Styles';\n\nconst Toast = (props) => <ToastWrapper>{props.children}</ToastWrapper>;\n\nexport default Toast;\n\nToast.propTypes = {\n  children: PropTypes.any,\n};\n","import React from 'react';\r\nimport Toast from '../toast/Toast';\r\nimport { Button } from '../common/Common.Styles';\r\nimport { resetGame, setOpenedCards } from '../../store/thunks';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getGameOver, getMatrixDimension } from '../../store/selectors';\r\n\r\nconst GameOver = () => {\r\n  const gameOver = useSelector(getGameOver);\r\n  const matrixDimension = useSelector(getMatrixDimension);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <>\r\n      {gameOver && (\r\n        <>\r\n          <Toast>You won!</Toast>\r\n          <Button\r\n            onClick={() => {\r\n              dispatch(resetGame());\r\n              dispatch(setOpenedCards([]));\r\n              dispatch(resetGame({ row: matrixDimension.row, col: matrixDimension.col }));\r\n            }}\r\n          >\r\n            Restart\r\n          </Button>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GameOver;\r\n","import styled from 'styled-components/macro';\r\n\r\nexport const SideBarWrapper = styled.div`\r\n  background-color: #29292e;\r\n  height: 100%;\r\n  width: ${(props) => (props.open ? '20%' : '1%')};\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1;\r\n  opacity: 0.75;\r\n  transition: width 1s ease-out, opaicty 2s ease-out;\r\n`;\r\n\r\nexport const SideBarInnerWrapper = styled.div`\r\n  position: relative;\r\n  overflow: hidden;\r\n  opacity: ${(props) => (props.open ? 1 : 0)};\r\n  transition: opacity 800ms ease-in;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const SliderButtonWrapper = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: whitesmoke;\r\n  height: 1.5rem;\r\n  width: 1.5rem;\r\n  border-radius: 0.75rem;\r\n  right: 0;\r\n  top: ${(props) => (props.open ? '1%' : '5%')};\r\n  transform: translateX(50%);\r\n  font-size: 1.5rem;\r\n  cursor: pointer;\r\n  z-index: 2;\r\n  transition: top 1s ease;\r\n  &:hover {\r\n    box-shadow: 0 2px 15px 0 rgba(0, 0, 0, 0.86);\r\n    background-color: black;\r\n    color: whitesmoke;\r\n  }\r\n`;\r\n","import styled from 'styled-components/macro';\r\n\r\nexport const SideBarContentWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  height: 100vh;\r\n  padding-top: 2rem;\r\n  padding-bottom: 2rem;\r\n`;\r\n\r\nexport const SideBarSliderLabelsWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nexport const SidebarImageWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 2.5rem;\r\n`;\r\n","// import React from 'react';\r\nimport * as Si from 'react-icons/si';\r\nimport * as Fa from 'react-icons/fa';\r\nimport * as Vsc from 'react-icons/vsc';\r\nimport * as Wi from 'react-icons/wi';\r\nimport * as Gi from 'react-icons/gi';\r\nimport * as Di from 'react-icons/di';\r\n\r\nconst iconMap = [Di, Fa, Vsc, Wi, Gi, Si];\r\nexport const getCardIcons = (iconStyle = 0) => {\r\n  if (iconStyle >= 0) {\r\n    // const imports = await import(`node${iconMap[iconStyle]}`);\r\n    // const imports =  await import(`../../../node_modules/${iconMap[iconStyle]}`);\r\n    return iconMap[iconStyle];\r\n  }\r\n};\r\n","import { getCardIcons } from '../components/cardList/CardIcons';\r\n\r\n/**\r\n *\r\n * @param array\r\n * @returns {*[]}\r\n */\r\nexport const getShuffledArray = (array = []) => {\r\n  const shuffledArray = [...array];\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\r\n  }\r\n  return shuffledArray;\r\n};\r\n\r\n/**\r\n *\r\n * @param row\r\n * @param col\r\n * @param iconStyle\r\n * @returns {*[]}\r\n */\r\nexport const getInitialLayout = (row = 2, col = 5, iconStyle = 0) => {\r\n  const imageArray = [];\r\n  const icons = Object.values(getCardIcons(iconStyle));\r\n  for (let i = 0, imageCounter = 0; i < row * col; i += 2, imageCounter++) {\r\n    const IconComponent = icons[imageCounter];\r\n    // push image pair\r\n    imageArray.push({ imageId: imageCounter, image: IconComponent, index: i });\r\n    imageArray.push({ imageId: imageCounter, image: IconComponent, index: i + 1 });\r\n  }\r\n  return getShuffledArray(imageArray);\r\n};\r\n\r\n/**\r\n *\r\n * @param cardArray\r\n * @param row\r\n * @param col\r\n * @param iconStyle\r\n * @returns {*[]}\r\n */\r\nexport const replaceImagesInLayout = (cardArray, row = 2, col = 5, iconStyle = 0) => {\r\n  debugger;\r\n  // get unique imageIds\r\n  const imageIds = Array.from(new Set(cardArray.map((card) => card.imageId)));\r\n  const icons = Object.values(getCardIcons(iconStyle));\r\n\r\n  // filter out and change both items' images with new image\r\n  imageIds.forEach((imageId, imageCounter) => {\r\n    const IconComponent = icons[imageCounter];\r\n    const cardsWithImageId = cardArray.filter((card) => card.imageId === imageId);\r\n\r\n    // replace image for both cards with new image\r\n    cardsWithImageId.forEach((card) => (card.image = IconComponent));\r\n  });\r\n\r\n  return [...cardArray];\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const SelectButtonWrapper = styled.div`\r\n  transition: 0.4s;\r\n  background: ${(props) => (props.active ? '#007aff' : '#fff')};\r\n  color: ${(props) => (props.active ? '#fff' : '#007aff')};\r\n  border-radius: 6px;\r\n  border: ${(props) => (props.active ? '1px solid #fff' : '1px solid #007aff')};\r\n  height: ${(props) => props.height || '2rem'};\r\n  width: ${(props) => props.width || '2rem'};\r\n  font: 14px/36px 'Roboto', sans-serif !important;\r\n  padding: 0 12px;\r\n  position: relative;\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  &:hover {\r\n    transition: 0.4s;\r\n    background: ${(props) => (props.active ? '#007aff' : '#fff')};\r\n    box-shadow: 0 2px 15px 0 rgba(0, 0, 0, 0.56);\r\n    border: 1px solid #007aff;\r\n  }\r\n`;\r\n\r\nexport const SelectButtonGroupWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 90%;\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const SelectButtonGroupWrapperGrid = styled.div`\r\n  display: grid;\r\n  grid-gap: 3rem;\r\n  grid-template-columns: ${(props) => `repeat(${props.cols}, 1fr)`};\r\n  grid-template-rows: ${(props) => `repeat(${props.rows}, 1fr)`};\r\n`;\r\n\r\nexport const SideBarContentTitle = styled.h3`\r\n  color: white;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {\r\n  SelectButtonGroupWrapper,\r\n  SelectButtonGroupWrapperGrid,\r\n  SelectButtonWrapper,\r\n  SideBarContentTitle,\r\n} from './SelectButtonGroup.styles';\r\n\r\nconst wrapperMap = {\r\n  grid: SelectButtonGroupWrapperGrid,\r\n  flex: SelectButtonGroupWrapper,\r\n};\r\nconst SelectButtonGroup = ({\r\n  contents,\r\n  onSelect,\r\n  selectedIndex,\r\n  title,\r\n  wrapperType,\r\n  rows,\r\n  cols,\r\n  height,\r\n  width,\r\n}) => {\r\n  const WrapperComponent = wrapperMap[wrapperType];\r\n  return (\r\n    <>\r\n      <SideBarContentTitle>{title}</SideBarContentTitle>\r\n      <WrapperComponent rows={rows} cols={cols}>\r\n        {contents.map((label, index) => (\r\n          <SelectButtonWrapper\r\n            key={label}\r\n            onClick={() => onSelect(index)}\r\n            active={selectedIndex === index}\r\n            height={height}\r\n            width={width}\r\n          >\r\n            {label}\r\n          </SelectButtonWrapper>\r\n        ))}\r\n      </WrapperComponent>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SelectButtonGroup;\r\n\r\nSelectButtonGroup.propTypes = {\r\n  contents: PropTypes.array,\r\n  onSelect: PropTypes.func,\r\n  selectedIndex: PropTypes.number,\r\n  rows: PropTypes.number,\r\n  cols: PropTypes.number,\r\n  title: PropTypes.string,\r\n  width: PropTypes.string,\r\n  height: PropTypes.string,\r\n  wrapperType: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { DiAndroid } from 'react-icons/di';\r\nimport { Fa500Px } from 'react-icons/fa';\r\nimport { VscAccount } from 'react-icons/vsc';\r\nimport { WiDayShowers } from 'react-icons/wi';\r\nimport { GiSkullSabertooth } from 'react-icons/gi';\r\nimport { SiAmazon } from 'react-icons/si';\r\nimport {\r\n  resetGame,\r\n  setGameDifficulty,\r\n  setGameMatrix,\r\n  setIconStyle,\r\n  setMatrixDimension,\r\n} from '../../store/thunks';\r\nimport { SideBarContentWrapper, SidebarImageWrapper } from './SideBarContent.styles';\r\nimport { getInitialLayout, replaceImagesInLayout } from '../../store/utils';\r\nimport SelectButtonGroup from '../selectButtonGroup/SelectButtonGroup';\r\nimport { getGameDifficulty, getGameMatrix, getIconStyle } from '../../store/selectors';\r\n\r\nconst getMatrixDimension = (gameDifficulty) => {\r\n  switch (gameDifficulty) {\r\n    case 0:\r\n      return { row: 2, col: 3 };\r\n    default:\r\n    case 1:\r\n      return { row: 2, col: 5 };\r\n    case 2:\r\n      return { row: 3, col: 6 };\r\n  }\r\n};\r\n\r\nconst SideBarContent = () => {\r\n  const dispatch = useDispatch();\r\n  const gameDifficulty = useSelector(getGameDifficulty);\r\n  const iconStyle = useSelector(getIconStyle);\r\n  const gameMatrix = useSelector(getGameMatrix);\r\n  const onSelect = (gameDifficulty) => {\r\n    const matrixDimension = getMatrixDimension(parseInt(gameDifficulty, 10));\r\n    dispatch(setMatrixDimension(matrixDimension));\r\n    dispatch(setGameDifficulty(gameDifficulty));\r\n    dispatch(setGameMatrix(getInitialLayout(matrixDimension.row, matrixDimension.col)));\r\n    dispatch(\r\n      resetGame({ row: matrixDimension.row, col: matrixDimension.col, gameDifficulty, iconStyle })\r\n    );\r\n  };\r\n\r\n  const onStyleSelect = (iconStyle) => {\r\n    const matrixDimension = getMatrixDimension(parseInt(gameDifficulty, 10));\r\n    dispatch(setIconStyle(iconStyle));\r\n    dispatch(\r\n      setGameMatrix(\r\n        replaceImagesInLayout(gameMatrix, matrixDimension.row, matrixDimension.col, iconStyle)\r\n      )\r\n    );\r\n  };\r\n\r\n  const imageButtons = [\r\n    SiAmazon,\r\n    Fa500Px,\r\n    VscAccount,\r\n    WiDayShowers,\r\n    GiSkullSabertooth,\r\n    DiAndroid,\r\n  ].map((ImageComponent, index) => (\r\n    <SidebarImageWrapper key={index}>\r\n      <ImageComponent />\r\n    </SidebarImageWrapper>\r\n  ));\r\n  return (\r\n    <SideBarContentWrapper>\r\n      <SelectButtonGroup\r\n        title=\"Difficulty\"\r\n        wrapperType=\"flex\"\r\n        contents={['Easy', 'Medium', 'Hard']}\r\n        onSelect={onSelect}\r\n        selectedIndex={gameDifficulty}\r\n      />\r\n      <SelectButtonGroup\r\n        title=\"Style\"\r\n        wrapperType=\"grid\"\r\n        rows={3}\r\n        cols={2}\r\n        height=\"3rem\"\r\n        width=\"3rem\"\r\n        contents={imageButtons}\r\n        onSelect={onStyleSelect}\r\n        selectedIndex={iconStyle}\r\n      />\r\n    </SideBarContentWrapper>\r\n  );\r\n};\r\n\r\nexport default SideBarContent;\r\n","import React, { useState } from 'react';\r\nimport { IoIosArrowDropright, IoIosArrowDropleft } from 'react-icons/io';\r\nimport { SideBarInnerWrapper, SideBarWrapper, SliderButtonWrapper } from './SideBar.styles';\r\nimport SideBarContent from '../sideBarContent/SideBarContent';\r\n\r\nexport const SideBar = () => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const toggleSideBar = () => {\r\n    setOpen(!open);\r\n  };\r\n  return (\r\n    <SideBarWrapper open={open}>\r\n      <SliderButtonWrapper onClick={toggleSideBar} open={open}>\r\n        {open ? <IoIosArrowDropleft /> : <IoIosArrowDropright />}\r\n      </SliderButtonWrapper>\r\n      <SideBarInnerWrapper open={open}>\r\n        <SideBarContent />\r\n      </SideBarInnerWrapper>\r\n    </SideBarWrapper>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { AppWrapper } from './App.styles';\r\nimport CardList from '../cardList/CardList';\r\nimport GameOver from '../gameOver/GameOver';\r\nimport { SideBar } from '../sideBar/SideBar';\r\n\r\nconst App = () => {\r\n  return (\r\n    <AppWrapper>\r\n      <SideBar />\r\n      <CardList />\r\n      <GameOver />\r\n    </AppWrapper>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\n// import { createLogger } from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { actionType } from './constants';\r\nimport { getInitialLayout } from './utils';\r\n\r\nexport const INITIAL_STATE = {\r\n  gameMatrix: getInitialLayout(),\r\n  openedCards: [],\r\n  closeImageWithIndex: null,\r\n  gameOver: false,\r\n  gameKey: 1,\r\n  gameDifficulty: 1,\r\n  iconStyle: 0,\r\n  matrixDimension: { row: 2, col: 5 },\r\n};\r\n\r\nexport const gameReducer = (state = INITIAL_STATE, action) => {\r\n  const {\r\n    SET_GAME_MATRIX,\r\n    UPDATE_OPENED_CARDS,\r\n    CLOSE_IMAGE_WITH_INDEX,\r\n    RESET_STATE,\r\n    GAME_OVER,\r\n    SET_GAME_DIFFICULTY,\r\n    SET_ICON_STYLE,\r\n    SET_MATRIX_DIMENSION,\r\n  } = actionType;\r\n\r\n  switch (action.type) {\r\n    default:\r\n      break;\r\n    case SET_GAME_MATRIX:\r\n      state = {\r\n        ...state,\r\n        gameMatrix: action.payload,\r\n      };\r\n      break;\r\n    case UPDATE_OPENED_CARDS:\r\n      state = {\r\n        ...state,\r\n        openedCards: action.payload,\r\n      };\r\n      break;\r\n    case CLOSE_IMAGE_WITH_INDEX:\r\n      state = {\r\n        ...state,\r\n        closeImageWithIndex: action.payload,\r\n      };\r\n      break;\r\n    case GAME_OVER:\r\n      state = {\r\n        ...state,\r\n        gameOver: action.payload,\r\n      };\r\n      break;\r\n    case SET_GAME_DIFFICULTY:\r\n      state = {\r\n        ...state,\r\n        gameDifficulty: action.payload,\r\n      };\r\n      break;\r\n    case SET_ICON_STYLE:\r\n      state = {\r\n        ...state,\r\n        iconStyle: action.payload,\r\n      };\r\n      break;\r\n    case SET_MATRIX_DIMENSION:\r\n      state = {\r\n        ...state,\r\n        matrixDimension: action.payload,\r\n      };\r\n      break;\r\n    case RESET_STATE:\r\n      state = {\r\n        ...INITIAL_STATE,\r\n        gameKey: ++INITIAL_STATE.gameKey,\r\n        gameMatrix: getInitialLayout(\r\n          action.payload.row,\r\n          action.payload.col,\r\n          action.payload.iconStyle || INITIAL_STATE.iconStyle\r\n        ),\r\n        matrixDimension: { row: action.payload.row, col: action.payload.col },\r\n        gameDifficulty: action.payload.gameDifficulty,\r\n        iconStyle: action.payload.iconStyle || INITIAL_STATE.iconStyle,\r\n      };\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n\r\nconst middlewares = [\r\n  // createLogger(),\r\n  thunk,\r\n];\r\n\r\nexport const store = createStore(\r\n  combineReducers({ gameReducer }),\r\n  {},\r\n  composeWithDevTools(\r\n    applyMiddleware(...middlewares)\r\n    // other store enhancers if any\r\n  )\r\n);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\nimport { store } from './store/AppStore';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}